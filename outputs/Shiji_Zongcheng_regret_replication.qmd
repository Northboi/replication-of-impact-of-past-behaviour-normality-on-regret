---
title: "The title"
author: 
  - Shiji Zhang, Zongcheng Cao
thanks: "Code and data are available at:https://github.com/Northboi/replication-of-impact-of-past-behaviour-normality-on-regret"
date: "`r Sys.time()`"
date-format: "D MMMM YYYY"
abstract: "This study replicates Kutcher and Feldman's research on how deviating from daily routine behaviors affects regret. By analyzing routine or exceptional behavior, we aim to quantify regret, social norms, negative consequences, luck and compensation. A voting mechanism among 684 participants was used to measure these parameters in a variety of situations, including Hitchhiker incidents, route changes leading to car crashes, and changes in shopping habits leading to robberies. Our findings are consistent with those of Kutcher and Feldman, but in conclusion we tend to suggest that exceptional behavior increases social sympathy but also increases the likelihood of social criticism when an accident occurs."
format: pdf
number-sections: true
toc: TRUE
---

```{r setup, include=FALSE}
######################################
# load libraries

if(!require(effsize)){install.packages('effsize', dependencies = TRUE)}
if(!require(psych)){install.packages('psych', dependencies = TRUE)}
if(!require(ggplot2)){install.packages('ggplot2', dependencies = TRUE)}
if(!require(dplyr)){install.packages('dplyr', dependencies = TRUE)}
if(!require(reshape2)){install.packages('reshape2', dependencies = TRUE)}
if(!require(tidyverse)){install.packages('tidyverse', dependencies = TRUE)}
if(!require(knitr)){install.packages('knitr', dependencies = TRUE)}
if(!require(rstudioapi)){install.packages('rstudioapi', dependencies = TRUE)}
if(!require(tidyr)){install.packages('tidyr', dependencies = TRUE)}
if(!require(stringr)){install.packages('stringr', dependencies = TRUE)}
if(!require(kableExtra)){install.packages('kableExtra', dependencies = TRUE)}
if(!require(Hmisc)){install.packages('Hmisc', dependencies = TRUE)}
if(!require(gridExtra)){install.packages('gridExtra', dependencies = TRUE)}

library(psych)
library(ggplot2)
library(dplyr) 
library(effsize)
library(reshape2)
library(tidyverse)
library(knitr)
library(rstudioapi)
library(tidyr)
library(stringr)
library(kableExtra)
library(Hmisc)
library(gridExtra)
```

\newpage

# Introduction

Every day of life is about constantly achieving various goals, whether they are spiritual or physical. People live day by day and develop various daily habits on the way to achieve their goals, and people regard this daily routine as normality (cite1). Behaviors like eating lunch and listening to music are done to satisfy people's needs and goals. However, no one can guarantee that they will achieve every goal. Regret occurs when people are dissatisfied with some of the results they get. This emotion occurs as early as six years old (cite2). The child makes a choice between two boxes with prizes and regrets when the prize in the other box is better than the one he chose. This is because after comparing the results, the child wants to get the better one instead of holding on to the current one.

Some people believe that when people make changes in their daily routine behavior, no matter the results are good or bad. Those who changed their behavior regretted it more than those who did not change their behavior (cite3), and those who changed from the right option to the wrong option regretted more than those who directly chose the wrong option. Based on these concepts, Kutscher and Feldman started research. They selected a total of 684 participants (cite0) to vote for various parameters of the representative characters of exceptions and routines in different scenarios (for example, if the participant thinks that the character A who represents the exception in a certain scenario will be more regret, he will vote for A instead of character B in regret aspect. And we use the total number of votes to quantify the size of parameters such as regret or luck). In part 1 they examined whether people who took hitch-hikers as an exception and were robbed felt more regret than people who took hitchhiking as a routine behavior. In Part 2, it was studied that people who took an exceptional route home and were involved in a car accident were less lucky than those who were involved in a car accident while taking their usual route home. After studying the first two scenarios, Kutscher and Feldman further explored, in a third scenario involving a robbery at a store, how much regret individuals who view going to store A as a routine behavior should feel compared to those who see it as an exceptional behavior , as well as how much compensation they were believed should receive. In our process of reproducing their paper, we mainly study and analyze the following results:

In section 3.1, use table1 and figure1 to study whether people who hitchhiked and were robbed due to exceptional behavior have more regrets, social norms (injunctive and descriptive) and negative affect.
 In section 3.2, use table 2 and figure 2 to study whether people who are involved in a car accident due to changing their home route will regret it more.
In section 3.3, use figure 3 and figure 4 to study whether people who were robbed due to the exception of changing stores are considered more regretful and deserve more compensation.

After analysis, we found that people who encountered bad situations due to exceptional behavior had more regrets, injunctive social norms, negative affect and bad luck, and were considered worthy of more compensation. People who encountered bad situations due to routine behavior simply had more descriptive social norms. Therefore, we obtained the same results for graphs and tables as the initial reproducing study from Kutscher and Feldman. In conclusion, we believe that these results illustrate that under the same bad situation, people who do exceptional behavior are more likely to receive sympathy from society, but are also more likely to be criticized because of the harm caused by sudden changes.

# Data
## Data Source

The datasets used in this analysis are collected by Lucas Kutscher from Maastricht University, and Gilad Fledman from Maastricht University and University of Hong Kong[cite0]. Real life data is collected in two datasets, in order to replicate the classic experiments initialized by Kahneman and Miller’s [original] on norm theory. The experiments are dedicated to three various scenarios, which will be discussed in Section 2.1. The original experiments were created in 1986, and the datasets by Kutscher and Fledman will be collected in 2019.
The datasets are chosen because Kutscher and Fledman modified and improved the design of the original experiment, making it more precise and unbiased; details on the improvement will be elaborate in Section 2.2. Moreover, the original experiment was conducted many years ago, which brings difficulties accessing the original data. For the reason above, datasets from Kutscher and Fledman are more appropriate for this analysis.

## Attributes

### Part 1: Hitch-hiker: 
```{r message=FALSE, echo=FALSE}
library(tidyverse)
library(kableExtra)
# Load the data
data <- read_csv("../inputs/data/osf-past-normality-regret-replication-exp1-data.csv")

# Select and rename the specified columns, and take the first 10 rows
selected_data <- data %>%
  select(Sc1_regret, sc1_socnorms1, sc1_socnorms2, sc1_combinednorms) %>%
  rename('Regret' = Sc1_regret, 'Injunctive norms' = sc1_socnorms1, 'Descriptive norms' = sc1_socnorms2, 'Negative affect' = sc1_combinednorms) %>%
  slice(1:10)

column_names <- c("Regret", "Injunctive norms", "Descriptive norms", "Negative affect")
kable_styled <- kable(selected_data, col.names = column_names, format = "html", align = 'c', escape = FALSE) %>%
  kable_styling(latex_options = c("striped", "hold_position"))

# Print the styled table
# Note: The print statement is not needed in an R Markdown document
print(kable_styled)

file_path <- "../replication/tables/Table1.csv"
write.csv(selected_data, file_path, row.names = FALSE)
```

Mr. Jones, who avoids giving rides to any hitch-hacker, decided to lift a hitch-hacker yesterday, and ended up being robbed. 
Mr. Smith, who often gives rides to hitch-hackers regularly, decided to lift a hitch-hacker yesterday, and ended up being robbed. 
The original description of part 1 was stored in the variable “Sc1_text1”.

To ensure all participants fully understand the scenario before answering the measurement questions, three comprehension questions are asked:
  1. “Who almost never takes hitch-hickers in his car?” choices: Mr. Jones, Mr. Smith
  2. “Who frequently takes hitch-hickers in his car?” choices: Mr. Jones, Mr. Smith
  3. ”Who got robbed?”  choices: Mr. Jones, Mr. Smith
The results of the questions are recorded in the variables “Sc1_Quiz1”, “Sc1_Quiz2”, “Sc1_Quiz3” in sequential order. Only participants who answer correctly for the above questions can continue to answer the measurement questions that can be used in the data. 

After passing the comprehension questions, four measurement questions are being asked, corresponding to four standards of measurement, regret, injunctive norms, descriptive norms, and negative affect, matching the variables “Sc1_regret”, “Sc1_socnorms1”, “Sc1_socnorms2”, “Sc1_combinednorms” in the data, respectively. These four measurement questions are: 
Regret - “Who do you expect to experience greater regret over the episode?” choices: Mr. Jones, Mr. Smith
Injunctive norms - “Whose behaviour do you think will be more criticised by others in society?” choices: Mr. Jones, Mr. Smith
Descriptive norms: Whose behavior do you think is more common in society?” choices: Mr. Jones, Mr. Smith
Negative affect - “contemplating your previous answers about this scenario and factoring in both Mr. Jones and Mr. Smith personal routines and your perceptions of social norms and possible social criticism, who do you think overall experienced more negative feelings about the decision to take a hitch-hiker that day?” choices: Mr. Jones, Mr. Smith
The corresponding texts are allocated in “Sc1_text2”, “Sc1_text3”, and “Sc1_text4”.

### Part 2: Car accident
Mr. Adams, was driving on his usual route to home, and was involved in a car accident.
Mr. White, was driving home, but on an alternate route that he barely visited before, then he was involved in a car accident. 
The original description of part 2 was stored in the variable “Sc2_text”.

Similarly, three comprehension questions are asked to ascertain participations’ understanding of Part 2:
“Who was driving home after work on his regular route?”[cite0] choices: Mr. Adams, Mr. White
“Who was driving on a route that he only takes when he wants a change of scenery?”[cite0] choices: Mr. Adams, Mr. White
“Who was involved in an accident?”[cite0] choices: Mr. Adams, Mr. White, both
Participants’ answers of the questions above are under the variables “Sc2_quiz1”, “Sc2_quiz2”, “Sc2_quiz3” in sequential order.

Participants that pass the comprehension questions, will be answering four measurement questions to weight regret, randomness, and luck in this scenario:
Regret - “Who is more upset over the accident?”[cite0] choices: Mr. Adams, Mr. White
Randomness for Mr. Adam - “Mr. Adams’ accident is just a random coincidence.”[cite0] choices: pick a number from 1 - 7, 1 means strongly disagree, and 7 means strongly agree
Randomness for Mr. White - “Mr. White’s accident is just a random coincidence.”[cite0] choices: pick a number from 1 - 7, 1 means strongly disagree, and 7 means strongly agree
Luck - “Which of the two do you think is less lucky?”[cite0] choices: Mr. Adams, Mr. White
The corresponding texts are allocated in “Sc2_text2”, “Sc2_text3”. The results are stored under the variables “Sc2_regret”, “Sc2_random_1”, “Sc2_random_2”, and “Sc2_lucky” in order.

### Part 3: Robbery
There are two distinct convenience stores around Mr. Paul’s neighborhood. Mr. Paul visits Store A more often than Store B. 
[Routine behavior condition][cite0]: Mr. Paul visited Store A last night, and encountered a robbery in the store. As a consequence, he lost his right arm due to a gunshot wound.
[Self-produced exception condition][cite0]: Mr. Paul wanted a shift in routine last night, so he visited Store B, and encountered a robbery in the store. As a consequence, he lost his right arm due to a gunshot wound.
[Other produced exception condition][cite0]: Mr. Paul visited Store B last night, because Store A was closed due to renovation. Then, he encountered a robbery in the store. As a consequence, he lost his right arm due to a gunshot wound.
The original text for each condition is stored in variables “Sc3_C1_text”, “Sc3_C2_text”, “Sc3_C3_text”.

Besides Experiment 1, another Experiment was conducted by a new group of participants, who only answer questions for scenario 3, to avoid “concerns that exposure to questions in Part 1 and 2 somehow affected answers in Part 3” [cite0]. 
This part of the experiment is divided into three small scenarios, which are [Routine behavior condition], [Self-produced exception condition], [Other produced exception condition] as listed. Three comprehension questions are included in Experiment 1 to test participants’ perception for part 3. Since there are three small scenarios, the questions are asked repeatedly for distinct scenarios. Answers are stored under the variables “Sc3_C1_quiz1”, “Sc3_C1_quiz2”, and “Sc3_C1_quiz3” for [Routine behavior condition], “Sc3_C2_quiz1”, “Sc3_C2_quiz2”, and “Sc3_C2_quiz3” for [Self-produced exception condition], “Sc3_C3_quiz1”, “Sc3_C3_quiz2”, and “Sc3_C3_quiz3” for [Other produced exception condition]. Similar to the other two parts, participants can only process the measurement questions once they correctly answer the comprehension questions. Notice that these comprehension questions are not asked for Experiment 2:
“Which convenience store does Mr. Paul visits frequently?”[cite0] choices: Store A, Store B
“Which convenience store did Mr. Paul visited last night?”[cite0] choices: Store A, Store B
“Did Mr. Paul lose the use of his right arm as a result of a gunshot wound?”[cite0] choices: Yes, No

After passing the comprehension questions, two measurement questions are asked to participants in both experiments, the texts are allocated in “sc3_c1_text2”, “sc3_c1_text3”, “sc3_c2_text2”, “sc3_c2_text3”, “sc3_c3_text2”, “sc3_c3_text3” for each experiment. Notice that the same question asked in Experiment 1 and Experiment 2 are formulated with some variations. In Experiment 1, the questions are:
Compensation - “How much money should Mr. Paul received compensation for his loss? (11-point scale: 0 representing 0$ to 10 representing 1,000,000 dollar; typical award: 500,000 dollar)”[cite0]
Regret - “assume there was no compensation given to Mr. Paul. How much regret does he feel over the situation? (1 – no regret to 5 – very strong regret)”[cite0]

In Experiment 2, the questions are altered into the form below:
Compensation - “Mr. Paul seeks compensation for both the physical and psychological harm suffered. How much money should Mr. Paul receive in compensation?.”[cite0]  choices: 0 representing 0$, 10 representing 1,000,000$
Regret - “Assume there was no compensation given to Mr. Paul. How much regret does he feel about visiting store [A/B]?”[cite0]  choices: choose number from 1 - 5, 1 represents no regret, 5 represents very strong regret
The results of the questions are allocated in the variables “sc3_c1_compensation”, “sc3_c1_regret”, “sc3_c2_compensation”, “sc3_c2_regret”, “sc3_c3_compensation”, and “sc3_c3_regret” for both experiments.

Furthermore, informations about each participants are also included in the data files, encompassing the following variables: “Q_TotalDuration” representing the total time in seconds that participant took to complete all questions, “age” representing the age of participants, “gender” representing the gender of participants, “serious” represents the seriousness of participants’ responses. In addition, “Q53", “Q54”, and “engunder” are three variables that are ambiguous in their meaning, since the author did not interpret them in the original paper, and no explanations are included in the datasets. Nevertheless, only responses of the measurement questions are in the usage of this analysis, so all other variables that are comparatively unrelated cannot alternate the final results. 

The variables that are applied in this study are: “Sc1_regret”, “sc1_socnorms1”, “sc1_socnorms2”, “sc1_combinednorms”, “Sc2_regret”, “Sc2_random_1”, “Sc2_random_2”, “Sc2_lucky”, “Sc3_C1_quiz1”, “Sc3_C1_quiz2”, “Sc3_C1_quiz3”, “Sc3_C2_quiz1”, “Sc3_C2_quiz2”, “Sc3_C2_quiz3”, “Sc3_C3_quiz1”, “Sc3_C3_quiz2”, “Sc3_C3_quiz3”. If the question contains various answers, such as (choices: Mr. Jones, Mr. Smith), then 1 represents the first choice, and 2 represents the second choice. If the question involves rating, such as (1 – no regret to 5 – very strong regret)[@cite0], then the actual number represents the rating.

Below is a glimpse of the dataset, with the four responses variables of part 1 that will be used in the analysis: 

## Result

```{r echo=FALSE}
library(dplyr)
library(knitr)
library(kableExtra)
library(reshape2)


data <- read.csv("../inputs/data/osf-past-normality-regret-replication-exp1-data.csv", header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
str(data)
# Your previous code for calculating counts and percentages...

# Create the table data with 'Character' column
# Ensure that the data is assigned to the correct character
variables <- c("Sc1_regret", "sc1_socnorms1", "sc1_socnorms2", "sc1_combinednorms")
data[variables] <- lapply(data[variables], function(x) factor(x, levels = c(1,2), labels = c("Exception Jones", "Routine Smith")))

# Improved variable labeling
labels <- c("Who experiences higher regret (direct replication)", 
            "Descriptive norms - which is more common?",
            "Injunctive norms - who is more criticized by society?",
            "Who experiences higher regret, when asking participants to consider the norm")
names(labels) <- variables
for (var in variables) {
  label(data[[var]]) <- labels[var]
}

# Convert the count data to percentage for plotting
data_long <- data %>%
  select(all_of(variables)) %>%
  melt(id.vars = NULL, variable.name = "variable", value.name = "character")  # 'melt' is from the 'reshape2' package, similar to 'pivot_longer'
data_long <- na.omit(data_long)  # Exclude NAs

# Calculate the percentages
data_long <- data_long %>%
  group_by(variable, character) %>%
  summarise(count = n(), .groups = 'drop') %>%
  group_by(variable) %>%
  mutate(percentage = count / sum(count)) %>%
  ungroup()  # Make sure to ungroup after calculations


regret_counts <- table(data$Sc1_regret)
regret_percentages <- prop.table(regret_counts) * 100

social_norm_injunctive_counts <- table(data$sc1_socnorms1)
social_norm_injunctive_percentages <- prop.table(social_norm_injunctive_counts) * 100

social_norm_descriptive_counts <- table(data$sc1_socnorms2)
social_norm_descriptive_percentages <- prop.table(social_norm_descriptive_counts) * 100

negative_affect_counts <- table(data$sc1_combinednorms)
negative_affect_percentages <- prop.table(negative_affect_counts) * 100


table_data <- data.frame(
  Character = c("Routine Smith", "Exception Jones"),
  Regret_Count = c(as.numeric(regret_counts["Routine Smith"]), as.numeric(regret_counts["Exception Jones"])),
  Regret_Percentage = c(sprintf("%.1f%%", regret_percentages["Routine Smith"]), sprintf("%.1f%%", regret_percentages["Exception Jones"])),
  Social_Norm_Injunctive_Count = c(as.numeric(social_norm_injunctive_counts["Routine Smith"]), as.numeric(social_norm_injunctive_counts["Exception Jones"])),
  Social_Norm_Injunctive_Percentage = c(sprintf("%.1f%%", social_norm_injunctive_percentages["Routine Smith"]), sprintf("%.1f%%", social_norm_injunctive_percentages["Exception Jones"])),
  Social_Norm_Descriptive_Count = c(as.numeric(social_norm_descriptive_counts["Routine Smith"]), as.numeric(social_norm_descriptive_counts["Exception Jones"])),
  Social_Norm_Descriptive_Percentage = c(sprintf("%.1f%%", social_norm_descriptive_percentages["Routine Smith"]), sprintf("%.1f%%", social_norm_descriptive_percentages["Exception Jones"])),
  Negative_Affect_Count = c(as.numeric(negative_affect_counts["Routine Smith"]), as.numeric(negative_affect_counts["Exception Jones"])),
  Negative_Affect_Percentage = c(sprintf("%.1f%%", negative_affect_percentages["Routine Smith"]), sprintf("%.1f%%", negative_affect_percentages["Exception Jones"]))
)

# Rename columns for display using kable
column_names <- c("Character", "Count", "Percentage", "Count", "Percentage", "Count", "Percentage", "Count", "Percentage")

# Use kable from knitr to create the table, and kableExtra to style it
kable_styled <- kable(table_data, col.names = column_names, format = "html", align = 'c', escape = FALSE, caption = "Part 1 (hitchhiker): Counts and proportions for perceived regret, social norms, and negative affect") %>%
  kable_styling(bootstrap_options = c("striped", "hover")) %>%
  add_header_above(c(" " = 1, "Regret" = 2, "Social norms (injunctive)" = 2, "Social norms (descriptive)" = 2, "Negative affect" = 2))

# Print the table
print(kable_styled)

file_path <- "../replication/tables/Table2.csv"
write.csv(table_data, file_path, row.names = FALSE)
```

```{r echo=FALSE}
library(psych)
library(effsize)
library(ggplot2)
library(dplyr) 
library(rstudioapi)
library(reshape2)


# Formatting options
options(scipen=999.99, digits = 7)

# Attempt to set working directory to the current R script location
tryCatch({
  setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}, error = function(e) {
  cat("Error setting working directory using rstudioapi. Please set manually if necessary.\n")
})

# Data loading and initial processing
data <- read.csv("../inputs/data/osf-past-normality-regret-replication-exp1-data.csv", header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
str(data)

# Demographics handling and descriptive statistics
data$age[data$age == 99] <- NA  # Handling outlier or incorrect age data
data$gender <- as.factor(data$gender)  # Converting gender to a factor for better analysis

# Print summary statistics for gender and age
table(data$gender)
cat("Mean age:", mean(data$age, na.rm = TRUE), "\n")
cat("SD of age:", sd(data$age, na.rm = TRUE), "\n")

# Factor conversion and labeling for Experiment 1 variables
variables <- c("Sc1_regret", "sc1_socnorms1", "sc1_socnorms2", "sc1_combinednorms")
data[variables] <- lapply(data[variables], function(x) factor(x, levels = c(1,2), labels = c("Exception Jones", "Routine Smith")))

# Improved variable labeling
labels <- c("Who experiences higher regret (direct replication)", 
            "Descriptive norms - which is more common?",
            "Injunctive norms - who is more criticized by society?",
            "Who experiences higher regret, when asking participants to consider the norm")
names(labels) <- variables
for (var in variables) {
  label(data[[var]]) <- labels[var]
}

# Convert the count data to percentage for plotting
data_long <- data %>%
  select(all_of(variables)) %>%
  melt(id.vars = NULL, variable.name = "variable", value.name = "character")  # 'melt' is from the 'reshape2' package, similar to 'pivot_longer'
data_long <- na.omit(data_long)  # Exclude NAs

# Calculate the percentages
data_long <- data_long %>%
  group_by(variable, character) %>%
  summarise(count = n(), .groups = 'drop') %>%
  group_by(variable) %>%
  mutate(percentage = count / sum(count)) %>%
  ungroup()  # Make sure to ungroup after calculations

# Define new labels for the x-axis
new_labels <- setNames(c("Regret", "Social norms (injunctive)", "Social norms (descriptive)", "Negative affect"),
                       c("Sc1_regret", "sc1_socnorms1", "sc1_socnorms2", "sc1_combinednorms"))

# Plot the percentages using ggplot2 with updated labels and excluding NAs
ggplot(data_long, aes(x = variable, y = percentage, fill = character)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +  # Adjust the dodge width
  scale_y_continuous(labels = scales::percent_format()) +
  scale_x_discrete(labels = new_labels) +
  labs(title = "Part 1: Proportions for perceived regret, injunctive social norms, descriptive social norms, and negative affect", x = NULL, y = "Percentage") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5),  # Set angle to 0 for horizontal labels
        legend.position = "bottom")

ggsave(
  "../replication/plots/figure1.png",
  height = 8,
  width = 16,
  units = "in",
  dpi = 300
)
```

```{r echo=FALSE}
library(knitr)
library(kableExtra)

data <- read.csv("../inputs/data/osf-past-normality-regret-replication-exp1-data.csv", header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
str(data)

# Make sure your data is a factor with levels as "1" and "2" representing "Routine Adams" and "Exception White"
data$Sc2_regret <- factor(data$Sc2_regret, levels = c(1, 2), labels = c("Routine Adams", "Exception White"))
data$Sc2_luck <- factor(data$Sc2_luck, levels = c(1, 2), labels = c("Routine Adams", "Exception White"))

# Calculate counts and percentages
regret_counts_2 <- table(data$Sc2_regret)
regret_percentages_2 <- prop.table(regret_counts_2) * 100

luck_counts <- table(data$Sc2_lucky)
luck_percentage <- prop.table(luck_counts) * 100

# Create the data frame for the table
table_data <- data.frame(
  Character = c("Routine Adams", "Exception White"),
  Regret_Count = as.numeric(regret_counts_2),
  Regret_Percentage = sprintf("%.1f%%", regret_percentages_2),
  Luck_Count = as.numeric(luck_counts),
  Luck_Percentage = sprintf("%.1f%%", luck_percentage)
)

# Define column names for the kable, these are the subheaders
column_names <- c("Character", "Count", "Percentage", "Count", "Percentage")

# Generate the kable with proper headers
kable_styled <- kable(table_data, col.names = column_names, format = "html",align = c('l', rep('c', 4)), escape = FALSE, caption = "Part 2 (car accident): Counts and proportions for perceivedregret and luck.") %>%
  kable_styling(bootstrap_options = c("striped", "hover")) %>%
  add_header_above(c(" " = 1, "Regret" = 2, "Luck" = 2))

# Print the styled table
print(kable_styled)

file_path <- "../replication/tables/Table3.csv"
write.csv(table_data, file_path, row.names = FALSE)
```

```{r echo=FALSE}
library(ggplot2)

# Correcting the mistakenly entered values for 'Sc2_random_1' and 'Sc2_random_2'
data <- read.csv("../inputs/data/osf-past-normality-regret-replication-exp1-data.csv", header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
str(data)

agg_data <- data.frame(
  category = rep(c("Regret", "Luck"), each = 2),
  character = rep(c("Adams - Routine", "White - Exception"), 2),
  count = c(table(data$Sc2_regret), table(data$Sc2_lucky))
)

# Step 2: Calculate proportions
agg_data$proportion <- with(agg_data, count / tapply(count, category, FUN = sum)[category])

# Step 3: Plot using ggplot2
ggplot(agg_data, aes(x = category, y = proportion, fill = character)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Part 2: Proportions for perceived regret and luck", x = NULL, y = "Percentage", fill = "Character") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0.5))

ggsave(
  "../replication/plots/figure2.png",
  height = 100,
  width = 133.33,
  units = "mm",
  dpi = 900)
```

```{r echo=FALSE}
# For experiment 1:
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)

#read the data for experiment 1:
data <- read.csv("../inputs/data/osf-past-normality-regret-replication-exp1-data.csv")

# Assuming your data has these columns already as numeric:
# sc3_c1_compensation, sc3_c1_regret, sc3_c2_compensation, sc3_c2_regret, sc3_c3_compensation, sc3_c3_regret

# Update the dataset with calculated averages for exception conditions
data_before3 <- data
data <- data %>%
  mutate(
    sc3_c1_compensation = as.numeric(sc3_c1_compensation),
    sc3_c1_regret = as.numeric(sc3_c1_regret),
    sc3_c2_compensation = as.numeric(sc3_c2_compensation),
    sc3_c2_regret = as.numeric(sc3_c2_regret),
    sc3_c3_compensation = as.numeric(sc3_c3_compensation),
    sc3_c3_regret = as.numeric(sc3_c3_regret),
    exception_compensation = rowMeans(cbind(sc3_c2_compensation, sc3_c3_compensation), na.rm = TRUE),
    exception_regret = rowMeans(cbind(sc3_c2_regret, sc3_c3_regret), na.rm = TRUE)
  )

# Reshape the data into a long format suitable for plotting
plot_data <- data %>%
  select(sc3_c1_compensation, exception_compensation, sc3_c1_regret, exception_regret) %>%
  pivot_longer(
    cols = everything(),
    names_to = "Condition_Measure",
    values_to = "Value"
  ) %>%
  mutate(
    Condition = case_when(
      str_detect(Condition_Measure, "compensation") ~ "Compensation",
      TRUE ~ "Regret"
    ),
    Measure = case_when(
      str_detect(Condition_Measure, "c1") ~ "Routine",
      TRUE ~ "Exception"
    )
  ) %>%
  select(-Condition_Measure) %>%
  drop_na(Value) # Drop NA values

# Plotting
p <- ggplot(plot_data, aes(x = Measure, y = Value, fill = Measure)) +
  geom_violin(trim = FALSE) +
  geom_jitter(width = 0.2, color = "black", alpha = 0.5) +
  facet_wrap(~Condition, scales = "free_y") +
  labs(y = "", x = "") +
  theme_minimal() +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5))

#For experiment 2:

# Load the new dataset
data2 <- read.csv("../inputs/data/osf-past-normality-regret-replication-exp2-data-v2.csv")

# Update the new dataset with calculated averages for exception conditions
data2_before3 <- data2
data2 <- data2 %>%
  mutate(
    sc3_c1_compensation = as.numeric(sc3_c1_compensation),
    sc3_c1_regret = as.numeric(sc3_c1_regret),
    sc3_c2_compensation = as.numeric(sc3_c2_compensation),
    sc3_c2_regret = as.numeric(sc3_c2_regret),
    sc3_c3_compensation = as.numeric(sc3_c3_compensation),
    sc3_c3_regret = as.numeric(sc3_c3_regret),
    exception_compensation = rowMeans(cbind(sc3_c2_compensation, sc3_c3_compensation), na.rm = TRUE),
    exception_regret = rowMeans(cbind(sc3_c2_regret, sc3_c3_regret), na.rm = TRUE)
  )

# Reshape the new data into a long format suitable for plotting
plot_data2 <- data2 %>%
  select(sc3_c1_compensation, exception_compensation, sc3_c1_regret, exception_regret) %>%
  pivot_longer(
    cols = everything(),
    names_to = "Condition_Measure",
    values_to = "Value"
  ) %>%
  mutate(
    Condition = case_when(
      str_detect(Condition_Measure, "compensation") ~ "Compensation",
      TRUE ~ "Regret"
    ),
    Measure = case_when(
      str_detect(Condition_Measure, "c1") ~ "Routine",
      TRUE ~ "Exception"
    )
  ) %>%
  select(-Condition_Measure) %>%
  drop_na(Value) # Drop NA values

# Plotting for the new data
p2 <- ggplot(plot_data2, aes(x = Measure, y = Value, fill = Measure)) +
  geom_violin(trim = FALSE) +
  geom_jitter(width = 0.2, color = "black", alpha = 0.5) +
  facet_wrap(~Condition, scales = "free_y") +
  labs(y = "", x = "") +
  theme_minimal() +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5))

# Combine the plots. The nrow parameter specifies the number of rows in the grid.
combined_plot <- grid.arrange(p, p2, nrow = 2)

# Print the combined plot

print(combined_plot)

# Now use ggsave to save the combined plot
ggsave(
  filename = "../replication/plots/figure3.png",
  plot = combined_plot, # Ensure combined_plot is the latest plot
  width = 16, # Adjust the width to give more space for the labels
  height = 8, # Adjust the height as needed
  units = "in",
  dpi = 300 # A lower dpi may be sufficient and result in smaller file sizes
)
```

```{r echo=FALSE}
# For experiment 1:
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)

# Assuming your data_before3 has these columns already as numeric:
# sc3_c1_compensation, sc3_c1_regret, sc3_c2_compensation, sc3_c2_regret, sc3_c3_compensation, sc3_c3_regret

#read the data for experiment 1:
data_before3 <- read.csv("../inputs/data/osf-past-normality-regret-replication-exp1-data.csv")

# Convert compensation and regret columns to numeric type
data_before3 <- data_before3 %>%
  mutate(
    sc3_c1_compensation = as.numeric(sc3_c1_compensation),
    sc3_c1_regret = as.numeric(sc3_c1_regret),
    sc3_c2_compensation = as.numeric(sc3_c2_compensation),
    sc3_c2_regret = as.numeric(sc3_c2_regret),
    sc3_c3_compensation = as.numeric(sc3_c3_compensation),
    sc3_c3_regret = as.numeric(sc3_c3_regret)
  )

# Reshape the data into a long format suitable for plotting
plot_data3 <- data_before3 %>%
  select(sc3_c1_compensation, sc3_c1_regret, sc3_c2_compensation, sc3_c2_regret, sc3_c3_compensation, sc3_c3_regret) %>%
  pivot_longer(
    cols = everything(),
    names_to = "Condition_Measure",
    values_to = "Value"
  ) %>%
  mutate(
    Condition = case_when(
      str_detect(Condition_Measure, "c1") ~ "Routine",
      str_detect(Condition_Measure, "c2") ~ "Self-produced\nexception",
      str_detect(Condition_Measure, "c3") ~ "Other-produced\nexception"
    ),
    Measure = case_when(
      str_detect(Condition_Measure, "compensation") ~ "Compensation",
      TRUE ~ "Regret"
    )
  ) %>%
  select(-Condition_Measure) %>%
  drop_na(Value) # Drop NA values

# Define custom colors
custom_colors <- c("Self-produced\nexception" = "#E24A33", 
                   "Other-produced\nexception" = "#00BA78", 
                   "Routine" = "#348ABD")

# Plotting with custom colors and updated labels
p3 <- ggplot(plot_data3, aes(x = Condition, y = Value, fill = Condition)) +
  geom_violin(trim = FALSE) +
  geom_jitter(width = 0.2, color = "black", alpha = 0.5) +
  facet_wrap(~Measure, scales = "free_y", ncol = 3, labeller = label_parsed) +
  scale_fill_manual(values = custom_colors) +
  labs(y = "", x = "") +
  theme_minimal() +
  theme(
    legend.position = "none",
    strip.text.x = element_text(size = 10, margin = margin(2, 0, 2, 0)),
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5) # Set angle to 0 for horizontal labels
  )

# For experiment 2:

# Assuming your data_before3 has these columns already as numeric:
# sc3_c1_compensation, sc3_c1_regret, sc3_c2_compensation, sc3_c2_regret, sc3_c3_compensation, sc3_c3_regret

data2_before3 <- read.csv("../inputs/data/osf-past-normality-regret-replication-exp2-data-v2.csv")
# Convert compensation and regret columns to numeric type
data2_before3 <- data2_before3 %>%
  mutate(
    sc3_c1_compensation = as.numeric(sc3_c1_compensation),
    sc3_c1_regret = as.numeric(sc3_c1_regret),
    sc3_c2_compensation = as.numeric(sc3_c2_compensation),
    sc3_c2_regret = as.numeric(sc3_c2_regret),
    sc3_c3_compensation = as.numeric(sc3_c3_compensation),
    sc3_c3_regret = as.numeric(sc3_c3_regret)
  )

# Reshape the data into a long format suitable for plotting
plot2_data3 <- data2_before3 %>%
  select(sc3_c1_compensation, sc3_c1_regret, sc3_c2_compensation, sc3_c2_regret, sc3_c3_compensation, sc3_c3_regret) %>%
  pivot_longer(
    cols = everything(),
    names_to = "Condition_Measure",
    values_to = "Value"
  ) %>%
  mutate(
    Condition = case_when(
      str_detect(Condition_Measure, "c1") ~ "Routine",
      str_detect(Condition_Measure, "c2") ~ "Self-produced\nexception",
      str_detect(Condition_Measure, "c3") ~ "Other-produced\nexception"
    ),
    Measure = case_when(
      str_detect(Condition_Measure, "compensation") ~ "Compensation",
      TRUE ~ "Regret"
    )
  ) %>%
  select(-Condition_Measure) %>%
  drop_na(Value) # Drop NA values

# Plotting with custom colors and updated labels
p32 <- ggplot(plot2_data3, aes(x = Condition, y = Value, fill = Condition)) +
  geom_violin(trim = FALSE) +
  geom_jitter(width = 0.2, color = "black", alpha = 0.5) +
  facet_wrap(~Measure, scales = "free_y", ncol = 3, labeller = label_parsed) +
  scale_fill_manual(values = custom_colors) +
  labs(y = "", x = "") +
  theme_minimal() +
  theme(
    legend.position = "none",
    strip.text.x = element_text(size = 10, margin = margin(2, 0, 2, 0)),
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5) # Set angle to 0 for horizontal labels
  )

# Print the plot
# Combine the plots. The nrow parameter specifies the number of rows in the grid.
combined_plot <- grid.arrange(p3, p32, nrow = 2)

# Print the combined plot

print(combined_plot)

# Now use ggsave to save the combined plot
ggsave(
  filename = "../replication/plots/figure4.png",
  plot = combined_plot, # Ensure combined_plot is the latest plot
  width = 16, # Adjust the width to give more space for the labels
  height = 8, # Adjust the height as needed
  units = "in",
  dpi = 300 # A lower dpi may be sufficient and result in smaller file sizes
)
```



## Discuss

## Conclusion 